version: '3.8'
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cursor2d
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis for job queue
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # MinIO for local storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    restart: unless-stopped

  # Next.js Web App
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/cursor2d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - STORAGE_PROVIDER=minio
      - BUCKET_NAME=${BUCKET_NAME}
      - HOST_TEMP_DIR_BASE=${HOST_TEMP_DIR_BASE}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - AUTH_TRUST_HOST=${AUTH_TRUST_HOST}
      - NEXT_PUBLIC_EXPRESS_URL=${NEXT_PUBLIC_EXPRESS_URL}
      - SERVER_SECRET=${SERVER_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BYPASS_LLM_CALL=${BYPASS_LLM_CALL}
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # Express HTTP Server
  http:
    build:
      context: .
      dockerfile: apps/http/Dockerfile
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/cursor2d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SERVER_SECRET=${SERVER_SECRET}
      - AUTH_SECRET=${AUTH_SECRET}
      - PORT=8080
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Manim Worker
  worker:
    build:
      context: .
      dockerfile: packages/manim-worker/Dockerfile
    env_file:
      - ./.env
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/cursor2d
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - STORAGE_PROVIDER=minio
      - BUCKET_NAME=${BUCKET_NAME}
      - HOST_TEMP_DIR_BASE=${HOST_TEMP_DIR_BASE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - BYPASS_LLM_CALL=${BYPASS_LLM_CALL}
    depends_on:
      - postgres
      - redis
      - minio
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOST_TEMP_DIR_BASE}:${HOST_TEMP_DIR_BASE}
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
